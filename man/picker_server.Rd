% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/widget_picker.R
\name{picker_server}
\alias{picker_server}
\title{Shiny module for a variable picker}
\usage{
picker_server(
  id,
  r,
  picker_id = "var",
  var_list,
  time = shiny::reactive(NULL),
  ...
)
}
\arguments{
\item{id}{<\code{character}> The ID of the page in which the widget will appear,
e.g. \code{canale}.}

\item{r}{<\code{reactiveValues}> The reactive values shared between modules and
pages. Created in the \code{server.R} file.}

\item{picker_id}{<\code{character}> A character string giving the identifier for
the picker input object. This will be used as the input's \code{inputId} and will
inform the bookmarking. It needs to be unique in the page. The default value
is \code{"var"}.}

\item{var_list}{<\verb{named list}> Choices to display in the picker input. Normally
made using \code{\link{dropdown_make}}.}

\item{time}{<\verb{reactive numeric vector}> List of time values to use for
appending a time to the variables picked. The returned vector will be the
same length as this argument.}

\item{...}{Additional arguments to pass to \code{\link[shinyWidgets]{updatePickerInput}}}
}
\value{
A reactive expression that returns the selected variable with \code{time}
appended. The length of the output is the same length as the \code{time} argument.
}
\description{
This function creates a Shiny module that allows users to pick a variable from a
list of options, and returns the selected variable as a reactive expression.
The list of options can be dynamically updated based on the input data and the
user's choices, and options can be disabled based on user input (time).
It consists of a dropdown menu with variable options, with the variable
explanation text that appears when the user hovers over each option. The menu
can be dynamically updated based on the user's input and the data available
in \code{var_list}, \code{df}, and \code{time}. The module can also disable
certain options based on the \code{time} argument, for example if the user is
comparing multiple years and some variables are not present in all years.
}
\seealso{
\code{\link{picker_UI}}
}
