% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_init.R
\name{r_init}
\alias{r_init}
\title{Initialize reactive values for Curbcut}
\usage{
r_init(
  server_session,
  lang_init = NULL,
  map_zoom = get_from_globalenv("map_zoom"),
  map_loc = get_from_globalenv("map_loc"),
  ...
)
}
\arguments{
\item{server_session}{<\code{ShinySession}> The server session from \code{server.R}, used
tu update the tab and other necessary actions taken from modules to the server
itself.}

\item{lang_init}{<\code{character}> An optional character string specifying the
initial language for the Curbcut. Default is \code{NULL}.}

\item{map_zoom}{<\code{numeric}> The default zoom level for the map. By default,
this value is retrieved from the \code{map_zoom} variable in the global environment.}

\item{map_loc}{<\verb{numeric vector}> The default location for the map. By default,
this value is retrieved from the \code{map_loc} variable in the global environment.}

\item{...}{Additional arguments to be passed to the reactive values of
each module. Arguments needs to be reactives, e.g. \code{other_id = shiny::reactiveVal(NA)}}
}
\value{
A reactive values object with settings for Curbcut
}
\description{
This function creates a set of reactive values used all around Curbcut (region,
lang, ...). It also sets up reactive alues for each module defined in the
\code{modules} object.
}
\details{
This function implements the "Strat√©gie du petit r" (the strategy of
the little r), which is a programming style that emphasizes the use of local
variables and small functions to improve code clarity and maintainability.
This function creates a local variable \code{r} that contains all the reactive
values for the app, and it loops over each module to add the rest of the
needed reactive values. The result is a set of reactive values that are
organized and easy to maintain, and passed down through every module. This way,
every module has access to this set of reactives.
}
