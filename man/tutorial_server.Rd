% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tutorial_module.R
\name{tutorial_server}
\alias{tutorial_server}
\alias{tutorial_UI}
\title{Server for tutorial triggering}
\usage{
tutorial_server(id, r, skip_elements = shiny::reactive(NULL))

tutorial_UI(id)
}
\arguments{
\item{id}{<\code{character}> The ID of the page in which the legend will appear,
e.g. \code{alp}.}

\item{r}{<\code{reactiveValues}> The reactive values shared between modules and
pages. Created in the \code{server.R} file. The output of \code{\link{r_init}}.
It's assumed that r has the following structure:
\itemize{
\item r$server_session: A server session object
\item r$lang: A string specifying the language for the tutorial
}}

\item{skip_elements}{<\verb{reactive character vector}> A reactive expression that
returns a character vector specifying the IDs of elements to be skipped in
the tutorial. Default is a reactive expression that returns NULL, meaning
all elements are included.}
}
\value{
The function does not explicitly return a value. It creates a Shiny
module server that can be included in a Shiny app to manage triggering of
the tutorial.
}
\description{
This function defines a Shiny module server for triggering the map tutorial.
The tutorial is triggered when the page is first loaded if a tutorial hasn't
been viewed in the last two weeks, or any time the "tutorial" element is
clicked.
}
\details{
The module server retrieves the last tutorial date from a cookie. If
the tutorial hasn't been viewed in the last two weeks, it triggers the
tutorial after a delay of 1 second. Additionally, clicking on the "tutorial"
element will also trigger the tutorial. The module server uses an internal Curbcut
function to trigger the tutorial (\code{tutorial_trigger})
.
}
\section{Functions}{
\itemize{
\item \code{tutorial_UI()}: Create the UI for the tutorial module

}}
