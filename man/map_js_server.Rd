% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_js_module.R
\name{map_js_server}
\alias{map_js_server}
\alias{map_js_UI}
\title{Shiny Server function to update the interactive map of \code{cc.map}}
\usage{
map_js_server(
  id,
  r,
  tile,
  coords,
  zoom,
  stories = NULL,
  stories_min_zoom = 13,
  select_id = shiny::reactive(NA),
  data_colours = shiny::reactive(data.frame()),
  outline_width = shiny::reactive(1),
  outline_color = shiny::reactive("transparent"),
  pickable = shiny::reactive(TRUE),
  fill_fun = shiny::reactive(cc.map::map_choropleth_fill_fun),
  fill_fun_args = shiny::reactive(list(df = data_colours(), get_col =
    names(data_colours())[1], fallback = "transparent"))
)

map_js_UI(id)
}
\arguments{
\item{id}{<\code{character}> The ID of the page in which this module will appear,
e.g. \code{alp}.}

\item{r}{<\code{reactiveValues}> The reactive values shared between modules and
pages. Created in the \code{server.R} file. The output of \code{\link{r_init}}.}

\item{tile}{<\verb{reactive character}> A reactive string with the map tile to
be used. Either a combination of a region with auto-scale (e.g. \code{city_auto_zoom})
or a combination of a region and a scale (e.g. \code{city_DA}). The output of
\code{\link{zoom_server}}.}

\item{coords}{<\verb{reactive numeric vector}> The current central map location
of the map. Bookmark can have an input on it. Usually \code{r[[id]]$coords}.}

\item{zoom}{<\verb{reactive numeric}> The current zoom level of the map, also
the zoom at which the map will initiate. Usually \code{r[[id]]$zoom}}

\item{stories}{<\code{data.frame}> Stories data.frame if they are to be shown
on the map. Defaults to NULL for not showing them.}

\item{stories_min_zoom}{<\code{numeric}> Zoom level at which stories start to be
shown. Defaults to 13.}

\item{select_id}{<\verb{reactive character}> The ID of the selected polygon.}

\item{data_colours}{<\verb{reactive data.frame}> The output of
\code{\link{data_get_colours}}. Used for the fill color of the
polygons.}

\item{outline_width}{<\verb{reactive numeric}> The width of the polygon outline.
Defaults to \code{shiny::reactive(1)}.}

\item{outline_color}{<\verb{reactive object}> The color of the polygon outline.
Defaults to \code{shiny::reactive("transparent")}. It can be a color, or a
JSON object representing the line-color mapping.}

\item{pickable}{<\verb{reactive logical}> Determines if the polygons are
selectable. Defaults to \code{shiny::reactive(TRUE)}.}

\item{fill_fun}{<\verb{reactive function}> The function used for fill colour of
polygons. Defaults to \code{shiny::reactive(cc.map::map_choropleth_fill_fun)}.}

\item{fill_fun_args}{<\verb{reactive list}> Arguments passed to the \code{fill_fun}
function. Defaults to \code{shiny::reactive(list(df = data_colours(),
get_col = names(data_colours())[1], fallback = "#B3B3BB"))}.}
}
\value{
A list. The function returns the viewstate of the map, which includes
the current position and zoom level.
}
\description{
This function creates an interactive map using the cc.map library. It supports
map tile updates and changes in the fill colour of map elements, as defined by
the 'tile' and 'data_colours' reactive values respectively.
}
\section{Functions}{
\itemize{
\item \code{map_js_UI()}: Create the UI for the map module

}}
