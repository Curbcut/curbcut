% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/var_manip.R
\name{var_get_info}
\alias{var_get_info}
\title{Get information about a variable from the \code{variables} table}
\usage{
var_get_info(
  var,
  what = "var_title",
  translate = FALSE,
  lang = NULL,
  check_year = TRUE,
  variables = get_from_globalenv("variables"),
  schemas = NULL
)
}
\arguments{
\item{var}{<\verb{character vector}> String representing the code of the variable
to retrieve information for.}

\item{what}{<\code{character}> String indicating the column name in the
\code{variables} table to retrieve information from. Defaults to \code{"var_title"}.}

\item{translate}{<\code{logical}> Indicating whether or not to translate the retrieved
information using the \code{\link{cc_t}} function. Defaults to \code{FALSE}.}

\item{lang}{<\code{character}> String indicating the language to translate to, if
\code{translate} is TRUE. If not specified, the function will not attempt to translate.}

\item{check_year}{<\code{logical}> Should the year be removed from \code{var} to grab
variable's info? Defaults to TRUE}

\item{variables}{<\code{data.frame}> The \code{variables} df. Defaults to grabbing it
from the global environment using \code{\link{get_from_globalenv}}.}

\item{schemas}{<\verb{named list}> Current schema information. The additional widget
values that have an impact on which data column to pick. Usually \code{r[[id]]$schema()}.}
}
\value{
The requested information about the variable, with optional translation
using the \code{\link{cc_t}} function.
}
\description{
This function retrieves information about a given variable from the \code{variables}
table in the global environment. The \code{variables} table must have columns for
\code{var_code} and the requested information specified by \code{what}. The function
first removes the time component from the variable name using
\code{\link{var_remove_time}}, hen looks up the variable code in
the \code{variables} table and returns the requested information for the variable.
}
