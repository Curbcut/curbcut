% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_module.R
\name{map_server}
\alias{map_server}
\alias{map_UI}
\title{Creates a Map Server Shiny module using Rdeck library}
\usage{
map_server(
  id,
  tile,
  data_colours,
  select_id,
  zoom_levels,
  zoom,
  fill_fun = map_scale_fill,
  fill_args = shiny::reactive(list(data_colours())),
  colour_fun = map_scale_colour,
  colour_args = shiny::reactive(list(NULL)),
  lwd_fun = map_scale_lwd,
  lwd_args = shiny::reactive(list(select_id(), tile(), zoom(), zoom_levels())),
  auto_highlight = TRUE,
  pickable = TRUE,
  mapbox_username = get0("mapbox_username", envir = .GlobalEnv),
  tileset_prefix = get0("tileset_prefix", envir = .GlobalEnv),
  map_base_style = get0("map_base_style", envir = .GlobalEnv),
  map_loc = get0("map_loc", envir = .GlobalEnv)
)

map_UI(id)
}
\arguments{
\item{id}{<\code{character}> The ID of the page in which this module will appear,
e.g. \code{canale}.}

\item{tile}{<\verb{reactive character}> A reactive string with the map tile to
be used. Either a combination of a region with auto-zoom (e.g. \code{city_auto_zoom})
or a combination of a region and a scale (e.g. \code{city_DA}). The output of
\code{\link{zoom_server}}.}

\item{data_colours}{<\verb{reactive data.frame}> The output of
\code{\link{data_get_colours}}. Used for the fill colour of the
polygons.}

\item{select_id}{<\verb{reactive character}> The ID of the selected polygon.}

\item{zoom_levels}{<\verb{named numeric vector}> A named numeric vector of zoom
levels. Usually one of the \code{map_zoom_levels_x}, or the output of
\code{\link{zoom_get_levels}}. It needs to be \code{numeric} as the function
will sort them to make sure the lower zoom level is first, and the highest
is last (so it makes sense on an auto-zoom).}

\item{zoom}{<\verb{reactive numeric}> The current zoom level of the map.}

\item{fill_fun}{<\code{function}> A function used to calculate the fill color of
the polygons. It needs to be created using \code{\link[rdeck]{scale_color_category}}.
Defaults to \code{\link{map_scale_fill}}.}

\item{fill_args}{<\verb{reactive list}> List of arguments to be passed to the
\code{fill_fun} argument.}

\item{colour_fun}{<\code{function}> A function used to calculate the line color of
the polygons. \code{\link{map_scale_colour}}.}

\item{colour_args}{<\verb{reactive list}> List of arguments to be passed to the
\code{colour_fun} argument.}

\item{lwd_fun}{<\code{function}> A function used to calculate the border width of
the polygons. It needs to be created using \code{\link[rdeck]{scale_category}}.
\code{\link{map_scale_lwd}}.}

\item{lwd_args}{<\verb{reactive list}> List of arguments to be passed to the
\code{lwd_fun} argument.}

\item{auto_highlight}{<\code{logical}> When TRUE, the current object hovered by
the cursor is highlighted.}

\item{pickable}{<\code{logical}> Determines if the layer responds to pointer /
touch events.}

\item{mapbox_username}{<\code{character}> Mapbox account username. Defaults to
grabbing the \code{mapbox_username} object from the global environment.}

\item{tileset_prefix}{<\code{character}> Prefix attached to every tileset. Should
correspond to the Curbcut city, e.g. \code{mtl}. Defaults to grabbing the
\code{tileset_prefix} object from the global environment.}

\item{map_base_style}{<\code{character}> The mapbox basemap style url.
See https://docs.mapbox.com/api/maps/#mapbox-styles}

\item{map_loc}{<\code{numeric}> A numeric vector of length two with lat/lon.
It will be the center of the viewport on map. Defaults to grabbing the
\code{map_loc} object from the global environment.}
}
\value{
The server function returns the map viewstate coming from
\code{\link[rdeck]{get_view_state}}.
}
\description{
This function is a Shiny module that generates an interactive map using the
\code{rdeck} package. The map displays data in the form of MVT (Mapbox Vector Tile)
layers with customizable colors and line widths. Arguments control the shown
MVT and the aesthetic of the map. The function also requires several global
environment variables to be set in order to work properly.
}
\section{Functions}{
\itemize{
\item \code{map_UI()}: Create the UI for the map module

}}
